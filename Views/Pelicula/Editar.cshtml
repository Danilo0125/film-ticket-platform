@model ASP_MVC_Prueba.Models.Peliculas

@{
    ViewData["Title"] = "Editar Película";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">
        <i class="fas fa-edit me-2 text-primary"></i>Editar Película
    </h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Dashboard</a></li>
        <li class="breadcrumb-item"><a asp-action="AdminPelis">Películas</a></li>
        <li class="breadcrumb-item active">Editar</li>
    </ol>

    <div class="card shadow-sm mb-4">
        <div class="card-header">
            <i class="fas fa-film me-1"></i>
            Información de la película
        </div>
        <div class="card-body">
            <form asp-action="Editar" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id_Peliculas" />

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Titulo" class="form-label">Título</label>
                            <input asp-for="Titulo" class="form-control" />
                            <span asp-validation-for="Titulo" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Genero" class="form-label">Género</label>
                            <select asp-for="Genero" class="form-select">
                                <option value="">Seleccione un género</option>
                                <option value="Amor">Amor</option>
                                <option value="Terror">Terror</option>
                                <option value="Ciencia-ficcion">Ciencia Ficción</option>
                                <option value="Animacion">Animación</option>
                            </select>
                            <span asp-validation-for="Genero" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Duracion" class="form-label">Duración (minutos)</label>
                            <input asp-for="Duracion" class="form-control" type="number" />
                            <span asp-validation-for="Duracion" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Trailer" class="form-label">URL del Trailer</label>
                            <input asp-for="Trailer" class="form-control" />
                            <span asp-validation-for="Trailer" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Formatos" class="form-label">Formatos disponibles</label>
                            <div class="d-flex flex-wrap gap-3">
                                @{
                                    var formatosList = Model.Formatos?.Split(',').Select(f => f.Trim()).ToList() ?? new List<string>();
                                    var formatos = new[] { "2D", "3D", "4D"};
                                }
                                @foreach (var formato in formatos)
                                {
                                    bool isChecked = formatosList.Contains(formato);
                                    <div class="form-check">
                                        <input class="form-check-input formato-checkbox" type="checkbox" 
                                               id="formato_@formato" value="@formato" @(isChecked ? "checked" : "") />
                                        <label class="form-check-label" for="formato_@formato">@formato</label>
                                    </div>
                                }
                                <input type="hidden" id="formatosInput" name="Formatos" value="@Model.Formatos" />
                            </div>
                            <span asp-validation-for="Formatos" class="text-danger"></span>
                        </div>
                        <div class="form-check mb-3">
                            @* Fix for nullable boolean checkbox *@
                            <input class="form-check-input" id="Estreno" name="Estreno" type="checkbox" value="true" checked="@(Model.Estreno == true)" />
                            <input name="Estreno" type="hidden" value="false" />
                            <label class="form-check-label" for="Estreno">Marcar como estreno</label>
                            <span asp-validation-for="Estreno" class="text-danger"></span>
                        </div>
                        
                        <div class="form-check mb-3">
                            @* Estado checkbox *@
                            <input class="form-check-input" id="Estado" name="Estado" type="checkbox" value="true" checked="@(Model.Estado == true)" />
                            <input name="Estado" type="hidden" value="false" />
                            <label class="form-check-label" for="Estado">
                                <i class="@(Model.Estado == true ? "fas fa-toggle-on text-success" : "fas fa-toggle-off text-danger")"></i>
                                Película activa
                            </label>
                            <span asp-validation-for="Estado" class="text-danger"></span>
                            <div class="form-text">Las películas inactivas no se mostrarán en cartelera.</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Sinopsis" class="form-label">Sinopsis</label>
                            <textarea asp-for="Sinopsis" class="form-control" rows="5"></textarea>
                            <span asp-validation-for="Sinopsis" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label for="imagenFile" class="form-label">Imagen de la película</label>
                            <input type="file" class="form-control" id="imagenFile" name="imagenFile" accept="image/*" />
                            <input type="hidden" asp-for="Imagen" />
                        </div>

                        <div class="mb-3">
                            @if (!string.IsNullOrEmpty(Model.Imagen))
                            {
                                <div class="text-center">
                                    <p class="text-muted">Imagen actual:</p>
                                    <img src="/img/peliculas/@Model.Imagen" class="img-thumbnail mb-2" style="max-height: 200px;"
                                         onerror="this.src='https://via.placeholder.com/200x300?text=Sin+Imagen'" />
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-warning">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    No hay imagen asociada a esta película
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <a asp-action="AdminPelis" class="btn btn-secondary">
                        <i class="fas fa-arrow-left me-2"></i>Volver
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-2"></i>Guardar cambios
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Preview the image before upload
        document.getElementById('imagenFile').addEventListener('change', function(e) {
            if (e.target.files && e.target.files[0]) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    if (document.querySelector('.img-thumbnail')) {
                        document.querySelector('.img-thumbnail').src = e.target.result;
                    }
                }
                reader.readAsDataURL(e.target.files[0]);
            }
        });

        // Handle format checkboxes
        document.querySelectorAll('.formato-checkbox').forEach(function(checkbox) {
            checkbox.addEventListener('change', updateFormatosValue);
        });

        function updateFormatosValue() {
            var selectedFormatos = [];
            document.querySelectorAll('.formato-checkbox:checked').forEach(function(checkbox) {
                selectedFormatos.push(checkbox.value);
            });
            document.getElementById('formatosInput').value = selectedFormatos.join(', ');
        }

        // Update icon for estado checkbox when changed
        document.getElementById('Estado').addEventListener('change', function() {
            const icon = this.nextElementSibling.nextElementSibling.querySelector('i');
            if (this.checked) {
                icon.className = 'fas fa-toggle-on text-success';
            } else {
                icon.className = 'fas fa-toggle-off text-danger';
            }
        });
    </script>
}
